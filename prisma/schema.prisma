// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model rep_details{
  id                Int           @id @default(autoincrement())
  unique_id         String?
  name              String?
  gender            String?
  date_of_birth     String?
  Nationality       String?
  mobile            String?
  email             String?
  designation       String?
  qualification     String?
  address           String?
  reporting_officer Int?
  created_by        Int? //reporting officer
  created_date      DateTime?
  type              String?
  password          String?
  status            String?  
  headquarters      Int?
  modified_by       Int?
  modified_date     DateTime?
  // rep_doc_id        doctor_details[]  
  // rep_leave_id      leave_table[]
  // rep_expense_report expense_report[]
  // rep_chemist_id     add_chemist[]
}
 model doctor_details{
  id                 Int            @id @default(autoincrement())
  firstName          String?
  lastName           String?
  doc_qualification  String?
  gender             String?
  specialization     String?
  mobile             String?
  no_of_visits       Int?
  visit_type         String?
  date_of_birth      String?
  wedding_date       String?
  created_UId        String? 
  created_date       DateTime?
  modified_date      DateTime?
  modified_by        String?
  status             String?
  address_id         Json?
  headquaters        Json?
  scheduleData       Json?
  approvalStatus     String?
  schedule_id        schedule[] 
  addressID         doctor_address[]
}
model doctor_address{
  id                  Int            @id @default(autoincrement())
  doc_id              Int
  doc_address_id      doctor_details @relation(fields: [doc_id],references: [id])
  chemist             Json?
  userId              String?
  product             Json?
  address             Json?
  area                Int?
  created_date        DateTime?
}

model schedule{
  id                 Int            @id @default(autoincrement())
  dr_id              Int
  scheduleId         doctor_details @relation(fields: [dr_id],references: [id])
  user_id            String?
  schedule           Json?
  addressId           Int?
  createdDate        DateTime
}
model leave_table{
  id                Int               @id @default(autoincrement())
  requester_id      Int?
  // repId             rep_details @relation(fields: [requester_id],references: [id])
  uniqueRequester_Id  String?
  remark            String?
  from_date         String?
  to_date           String?
  status            String?
  type              String?
  created_date      DateTime?
  approved_by       Int?
  manager_uniqueId  Int?
  approved_date     DateTime?
}
model expense_report{
  id                 Int            @id @default(autoincrement())
  requester_id       Int?
  // repID              rep_details @relation(fields: [requester_id],references: [id])  
  uniqueRequesterId   String?
  amount             String?
  // expenseType        String?
  remark             String?
  attachment         String?
  trip_date          String?
  doct_id            Int?
  approved_by        Int?
  approved_date      DateTime?
  status             String?
  created_date       DateTime?
  reporting_officer  Int?
}
model add_chemist{
  id                 Int             @id @default(autoincrement())
  created_by         Int //need to add the relation with the manager table
  // repId              rep_details @relation(fields: [rep_id],references: [id])
  unique_Id          String?
  building_name      String?
  mobile             String?
  email              String?
  license_number     String?
  address            String?
  date_of_birth      String?
  // anniversary_date   String?
  status              String?
  date_time          DateTime
}
model add_product{
  id                 Int              @id @default(autoincrement())
  created_by         String?
  product_name       Json?
  quantity           Int?
  status             String?
}
model reporting_details{
  id                  Int             @id @default(autoincrement())
  reporting_type      String?
  date                String?
  time                String?
  products            Json?
  remarks             String?
  rep_id              Int?
  unique_reqId        String?
  doctor_id           Int?
  visited_date        String?
  datetime            DateTime
}
model manager_details{
  id                  Int             @id @default(autoincrement())
  name                String?
  dob                 String?
  gender              String?
  mobile              String?
  qualification       String?
  designation         String?
  nationality         String?
  email               String?
  address             String?
  city                String?
  pincode             Int?
  type                String?
  created_date        DateTime?
  unique_id           String?
  password            String?
  status              String?
}

model headquarters{
  id                  Int            @id @default(autoincrement())
 
  headquarter_name    String?
  // sub_headquarter     String?
}

model subHeadquarter{
  id               Int      @id @default(autoincrement())
  headquarterId    Int?      
  subheadquarter   String?
}

// model travel_plan{
//   id                 Int         @id @default(autoincrement())
//   requester_id       String?
//   headquarters_date      Json?
//   // date               String?
//   amount             String?
//   created_date       DateTime?
//   accepted_date      DateTime?
//   accepted_by        String?
//   status             String?
// }

model visit_record{
  id                 Int          @id @default(autoincrement())
  requesterId        Int?  //not needed
  requesterUniqueId  String?
  dr_Id              Int?
  total_visits       Int?
  visited            Int?
  balance_visit      Int?
  date               String?
  dateTime           DateTime?
  travel_id          Int?
}
 
 model specialization{
  id              Int      @id @default(autoincrement())
  department      String?
  createdDate     DateTime?
 }

 model travelPlan {
  id               Int    @id @default(autoincrement())
  user_id          Int?
  month            Int?
  status           String?
  created_date     DateTime
  detailedPlan     detailedTravelPlan[]
 }

 model detailedTravelPlan{
  id               Int    @id @default(autoincrement())
  travelplan_id    Int
  planId           travelPlan @relation(fields: [travelplan_id], references: [id])
  dr_id            Int?
  user_id          Int?
  date             String?
  status           String?
  created_date     DateTime
  visited_status   Boolean?
  visitedDate      String?
 }

 model userData{
  id               Int         @id @default(autoincrement())
  uniqueId         String?     @unique
  name             String?
  gender           String?
  date_of_birth    String?
  address          String?
  mobile           String?
  email            String?
  designation      String?
  nationality      String?
  qualification    String?
  headquaters      Json?
  role             String?
  password         String?
  reportingOfficer_id Int?
  createdBy           Int?
  adminId             Int?
  reporting_type      String?
  status              String?
  modified_by         Int?
  modified_date       DateTime?
 }